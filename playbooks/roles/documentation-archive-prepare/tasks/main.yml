---
# Update with upstream
- name: "Fetch upstream and rebase"
  shell: git checkout gh-pages && git fetch upstream && git rebase upstream/gh-pages
  args:
    chdir: "{{ github_folder }}/documentation-archive"
  ignore_errors: false

- name: "Change version to {{ release_version }}"
  shell: git checkout v{{ release_version }}
  args:
    chdir: "{{ github_folder }}/jhipster.github.io/"

- name: "Install dependencies for website"
  shell: npm i
  args:
    chdir: "{{ github_folder }}/jhipster.github.io/"

- name: "Cleanup previous website build if exists"
  shell: npm run clear
  args:
    chdir: "{{ github_folder }}/jhipster.github.io/"

- name: "Build website for archive"
  shell: SITE_BASE_URL=/documentation-archive/v{{ release_version }}/ IS_DOCS_ARCHIVE=true npm run build
  args:
    chdir: "{{ github_folder }}/jhipster.github.io/"

- name: "Cleanup previous website archive with same version if exists"
  shell: rm -rf {{ github_folder }}/documentation-archive/v{{ release_version }}
  args:
    chdir: "{{ github_folder }}/documentation-archive/"

- name: "Copy the documentation archive"
  shell: cp -R ./build {{ github_folder }}/documentation-archive/v{{ release_version }}
  args:
    chdir: "{{ github_folder }}/jhipster.github.io/"

- name: "Switch back to main branch"
  shell: git checkout main && git checkout -- . && git clean -fd
  args:
    chdir: "{{ github_folder }}/jhipster.github.io/"

- name: "Insert/Update version in index.html"
  lineinfile:
    path: "{{ github_folder }}/documentation-archive/index.html"
    regexp: '</li><li><a href="v{{ release_version }}/">v{{ release_version }}/</a></li>'
    insertbefore: "</ul>"
    line: '      <li><a href="v{{ release_version }}/">v{{ release_version }}/</a></li>'

- name: "Commit Release {{ release_version }}"
  shell: git add . && git commit -m 'Release v{{ release_version }}'
  args:
    chdir: "{{ github_folder }}/documentation-archive/"
